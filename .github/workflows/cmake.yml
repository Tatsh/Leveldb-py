---
env:
  BUILD_TYPE: Release
jobs:
  build:
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    steps:
      - if: matrix.os == 'windows-latest'
        id: fixed_workspace
        name: Fix path (Windows)
        run: |
          echo out=$("${{github.workspace}}" -Replace "\\","/") | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
      - name: 'Set VCPKG_ROOT environmental variable'
        run: echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV
        shell: bash
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - if: matrix.os == 'macos-latest' || matrix.os == 'windows-latest'
        name: Get Latest Tag
        id: latest_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          cache: true
          version: 6.5.0
      - if: matrix.os != 'windows-latest'
        run: vcpkg install leveldb
      - if: matrix.os == 'windows-latest'
        run: vcpkg install leveldb:x64-windows
      - name: Configure
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_VERBOSE_MAKEFILE=ON --install-prefix ${{github.workspace}}/build/prefix --toolchain ${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - if: matrix.os == 'macos-latest' || matrix.os == 'windows-latest'
        name: Install
        run: cmake --install ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - if: matrix.os == 'macos-latest' || matrix.os == 'windows-latest'
        name: Package
        run: cpack -C ${{env.BUILD_TYPE}} --config ${{github.workspace}}/build/CPackConfig.cmake
      - if: matrix.os == 'windows-latest'
        name: Upload package (Windows)
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{steps.fixed_workspace.outputs.out}}/LevelDBViewer-*.exe
            ${{steps.fixed_workspace.outputs.out}}/LevelDBViewer-*.zip
          tag_name: ${{ steps.latest_tag.outputs.tag }}
      - if: matrix.os == 'macos-latest'
        name: Upload package (macOS)
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{github.workspace}}/LevelDBViewer-*.dmg
            ${{github.workspace}}/LevelDBViewer-*.zip
          tag_name: ${{ steps.latest_tag.outputs.tag }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
name: Build
'on':
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
